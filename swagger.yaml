swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User Profile API
      description: Api for view all their transactions for the current month, grouped by account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions Successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: The JWT token supplied is invalid or corrupted. Please check that the token is correct and has not been tampered with.
        '500':
          description: Internal Server Error
  /user/transaction/{transactionId}:
    parameters:
      - name: transactionId
        in: path
        description: Transaction identifier to remove information from the transaction 
        required: true
        type: integer
        format: int64
    delete:
      summary: Delete information from a transaction
      description: Allows you to delete specific information from a transaction.
      tags:
        - Transaction Module
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      - in: body
        name: body
        description: Information to be deleted from the transaction
        required: true
        schema:
          type: object
          properties:
            idItem:
              type: number
            balance:
              type: number
            date:
              type: string
            description:
              type: string
            amount:
              type: number
            transaction:
              type: string
            category:
              type: string
            notes: 
              type: string
      responses:
        '200':
          description: Transaction information successfully deleted
        '404':
          description: The specified transaction was not found
        '500':
          description: Erreur interne du serveur
    put:
      tags:
        - Transaction Module
      summary: Modify transaction information
      description: Allows you to modify the information of an existing transaction.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            $ref: '#/definitions/UpdateTransactionNote'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/UpdateTransactionNote'
        '400':
          description: The JWT token supplied is invalid or corrupted. Please check that the token is correct and has not been tampered with.
        '404':
          description: The specified transaction was not found
        '500':
          description: Erreur interne du serveur
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description:  The JWT token supplied is invalid or corrupted. Please check that the token is correct and has not been tampered with.
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: array
    items:
      type: object
      properties:
        transactionId:
          type: integer
        body:
          type: object
          properties:
            idItem:
              type: number
            balance:
              type: number
            date:
              type: string
            description:
              type: string
            amount:
              type: number
            transaction:
              type: string
            category:
              type: string
            notes: 
              type: string 
  UpdateTransactionNote:
    type: object
    properties:
      transactionId:
        type: integer
      body:
          type: object
          properties:
            idItem:
              type: number
            balance:
              type: number
            date:
              type: string
            description:
              type: string
            amount:
              type: number
            transaction:
              type: string
            category:
              type: string
            notes: 
              type: string 
  TransactionNote:
    type: object
    properties:
      notes:
        type: string
